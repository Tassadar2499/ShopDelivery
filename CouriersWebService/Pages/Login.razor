@page "/login"

@using CouriersWebService.Data
@using CouriersWebService.Services
@using Blazored.LocalStorage

@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject CouriersAuthLogic couriersAuthLogic
@inject IJSRuntime JsRuntime
@inject ILocalStorageService localStorage

<h3>Register</h3>

<EditForm Model="@AuthData" OnValidSubmit="@HandleLogin">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<InputText id="login" @bind-Value="AuthData.Login" />
	<InputText type="password" placeholder="Password" @bind-Value="@AuthData.Password" />

	<button type="submit">Login</button>
</EditForm>

@code {
	private AuthData AuthData { get; set; }

	protected override void OnInitialized()
	{
		AuthData = new AuthData();
	}

	private async Task HandleLogin()
	{
		var isSuccess = await couriersAuthLogic.LoginAsync(AuthData);
		if (isSuccess)
		{
			await localStorage.SetItemAsync("login", AuthData.Login);
			navigationManager.NavigateTo($"{navigationManager.BaseUri}/courierinfo");
		}
		else
		{
			await JsRuntime.InvokeVoidAsync("alert", "Authentithication failed");
		}
	}
}