@using Blazored.LocalStorage

@inject ILocalStorageService localStorage
@inject NavigationManager navigationManager

<div class="top-row pl-4 navbar navbar-dark">
	<a class="navbar-brand" href="">CouriersWebService</a>
	<button class="navbar-toggler" @onclick="ToggleNavMenu">
		<span class="navbar-toggler-icon"></span>
	</button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
	<ul class="nav flex-column">
		<li class="nav-item px-3">
			<NavLink class="nav-link" href="" Match="NavLinkMatch.All">
				<span class="oi oi-home" aria-hidden="true"></span> Home
			</NavLink>
		</li>
		@if (!IsLoggedIn)
		{
			<li class="nav-item px-3">
				<NavLink class="nav-link" href="register">Register</NavLink>
			</li>
			<li class="nav-item px-3">
				<NavLink class="nav-link" href="login">Login</NavLink>
			</li>
		}
		else
		{
			<li class="nav-item px-3">
				<NavLink class="nav-link" @onclick="LogOutAsync" href="#">Logout</NavLink>
			</li>
			<li class="nav-item px-3">
				<NavLink class="nav-link" href="courierinfo">Orders</NavLink>
			</li>
		}
	</ul>
</div>

@code {
	private bool collapseNavMenu = true;

	private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

	private bool IsLoggedIn { get; set; }

	private void ToggleNavMenu()
	{
		collapseNavMenu = !collapseNavMenu;
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (!firstRender)
			return;

		IsLoggedIn = await IsContainsLoginAsync();
		if (IsLoggedIn)
			StateHasChanged();
	}

	private async Task LogOutAsync()
	{
		await localStorage.ClearAsync();
		IsLoggedIn = false;
	}

	private async Task<bool> IsContainsLoginAsync()
	{
		var login = await localStorage.GetItemAsStringAsync("login");

		return !string.IsNullOrEmpty(login);
	}
}